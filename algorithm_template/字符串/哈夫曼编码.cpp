

/*
 * 哈夫曼编码: 对给定string进行数据压缩, 用更小的空间存储字符串, 并支持无损恢复
 *
 * 思想:
 *      为了尽量减少压缩长度, 每种字符对应一种码字, 出现频率越高的字符码字越短;
 *      为了恢复原字符串: 一种字符的码字不能是另一种字符码字的前缀
 *
 * 过程:
 *      1. 遍历字符串s, 统计每种字符的出现次数; 共n个节点, 每个节点的权重w=cnt[i] (对应s中出现的n种字符, 每种字符出现次数为cnt{i])
 *      2. 每次合并两个权重最小的节点, 合并后的节点权重为两节点权重之和
 *      3. 不断合并, 直至合为一个节点作为根节点, 形成的树就是哈夫曼树
 *
 */