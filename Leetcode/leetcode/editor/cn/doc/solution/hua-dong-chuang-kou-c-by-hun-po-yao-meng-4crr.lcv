* 

```
class Solution {
public:
    unordered_map<char,int>window;
        int lengthOfLongestSubstring(string s) {
        int left,right=0;//窗口范围[left,right]
        int max_len=0;//最大长度
        while(right<s.length())//当窗口的右端点超出字符串右端时，终止循环
        {
            char temp=s[right];
            right++;
            window[temp]++;//right点加入窗口
            while(window[temp]>1)
            {   
                char c=s[left];
                left++;//由于出现了重复元素，所以将left点弹出窗口
                window[c]--;
            }
            max_len=max(right-left,max_len);
        }
        return max_len;
    }
};
```

